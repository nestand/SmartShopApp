name: Build Windows App

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build-windows:
    runs-on: windows-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Flutter
      uses: subosito/flutter-action@v2
      with:
        flutter-version: '3.32.7'
        channel: 'stable'
        
    - name: Enable Windows desktop
      run: flutter config --enable-windows-desktop
      
    - name: Install dependencies
      run: flutter pub get
      
    - name: Run flutter doctor
      run: flutter doctor -v
      
    - name: Build Windows app
      run: flutter build windows --release --verbose
      
    - name: Debug - List build directory contents
      run: |
        Write-Host "=== BUILD DIRECTORY STRUCTURE ==="
        if (Test-Path "build") {
          Get-ChildItem -Path "build" -Recurse | Select-Object FullName
        } else {
          Write-Host "‚ùå Build directory not found!"
          exit 0
        }
        
        Write-Host ""
        Write-Host "=== CHECKING COMMON WINDOWS BUILD PATHS ==="
        
        $possiblePaths = @(
          "build\windows\x64\runner\Release",
          "build\windows\runner\Release", 
          "build\windows\Win32\runner\Release",
          "build\windows\x64\Release",
          "build\windows\Release"
        )
        
        $foundPath = $false
        foreach ($path in $possiblePaths) {
          if (Test-Path $path) {
            Write-Host "‚úÖ Found Windows build at: $path"
            Write-Host "Contents:"
            Get-ChildItem $path | Format-Table Name, Length, LastWriteTime -AutoSize
            $foundPath = $true
          } else {
            Write-Host "‚ùå Not found: $path"
          }
        }
        
        if (-not $foundPath) {
          Write-Host "‚ö†Ô∏è No standard build paths found. Checking entire build/windows structure:"
          if (Test-Path "build\windows") {
            Get-ChildItem "build\windows" -Recurse | Where-Object {$_.Name -like "*.exe"} | Select-Object FullName
          }
        }
      shell: powershell
      continue-on-error: true
      
    - name: Upload Windows build (x64 path)
      uses: actions/upload-artifact@v4
      with:
        name: smartshop-windows-x64
        path: build/windows/x64/runner/Release/
      continue-on-error: true
        
    - name: Upload Windows build (runner path)  
      uses: actions/upload-artifact@v4
      with:
        name: smartshop-windows-runner
        path: build/windows/runner/Release/
      continue-on-error: true
      
    - name: Upload Windows build (Win32 path)
      uses: actions/upload-artifact@v4
      with:
        name: smartshop-windows-win32
        path: build/windows/Win32/runner/Release/
      continue-on-error: true

    - name: Upload entire windows build directory (fallback)
      uses: actions/upload-artifact@v4
      with:
        name: smartshop-windows-full
        path: build/windows/
      if: always()

    - name: Build completion summary
      run: |
        Write-Host "üéâ Windows build workflow completed!"
        Write-Host "üì¶ Check the 'Actions' tab for downloadable artifacts."
        Write-Host "üîç Look for artifacts named 'smartshop-windows-*'"
      shell: powershell
